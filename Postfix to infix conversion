// program to convert postfix to infix 
#include<stdio.h>
#include<ctype.h>
#include<stdlib.h>
#include<math.h>
#define MAX 50
int stack[MAX];
int top,nn;
char s[20];

void push(char);
char pop();
void calculate();

void main(){
    top =-1;
    printf("Enter the postfix expression correctly: ");
    gets(s);
    calculate();
}
void push(char ch){
    
        if(top == MAX-1){
            printf("\nStack is overflow");
        }
        else{
            top++;
            stack[top]=ch;
        }
    
}
char pop(){
    if (top == -1){
        printf("Stack is underflow");
        return -1;
    }
    else{
        char ch = stack[top];
        top--;
        return ch;
    }
}
void calculate(){
    int n1,n2,n3,i;
    i=0;
    while(s[i]){
        if(s[i]==' '||s[i]=='\t'){
            i++;
            continue;
        }
        if(isdigit(s[i])){
            nn = s[i]-'0';
            push(nn);
        }
        else{
            n1 = pop();
            n2 = pop(); //if character is operand push to stack, if it is operator, then operations on two stack elements and result is pushed to stack
            switch(s[i]){
                case '+':
                    n3 = n2+n1;
                    break;
                case '-':
                    n3 = n2-n1;
                    break;
                case '*':
                    n3 = n2*n1;
                    break;
                case '/':
                    n3 = n2/n1;
                    break;
                case '%':
                    n3 = n2%n1;
                    break;
                default:
                    printf("Unknown Operator");
                    exit(1);
            }
            push(n3);
        }
        i++;
    }
    printf("\n Result is %d",n3);
}
