class GFG
{
    ArrayList<Long> find(long arr[], int n, int x)
    {
        // code here
       ArrayList<Long> ans = new ArrayList<Long>();
      ans.add((long)-1);
      ans.add((long)-1);
      
      int start = 0;
      int end = n - 1;
      
      // Find first occurence index
      while ( start <= end ){
          int mid = start + ( end - start)/2;
          if(arr[mid] == x){
              ans.set(0,(long)mid);
              end = mid - 1;
          }
          else if(arr[mid] > x){
              end= mid - 1;
          }
          else{
              start = mid + 1;
          }
      }
      start = 0;
       end = n - 1;
      while ( start <= end ){
          int mid = start + ( end - start)/2;
          if(arr[mid] == x){
              ans.set(1,(long)mid);
              start = mid+ 1;
          }
          else if(arr[mid] > x){
              end= mid - 1;
          }
          else{
              start = mid + 1;
          }
      }
      return ans;
    }
    
}
